var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('./Tag.css');
  const COLORS = {
    primary: 'rgb(175, 25, 25)',
    seconday: 'rgb(25, 120, 150)',
    default: 'rgb(80, 80, 80)'
  };
  const computeColor = props => {
    const {primary = false, secondary = false} = props;
    if (primary) {
      return COLORS.primary;
    } else if (secondary) {
      return COLORS.seconday;
    } else {
      return COLORS.default;
    }
  };
  const computeStyle = props => ({
    backgroundColor: computeColor(props)
  });
  const Tag = ({children = [], ...props}) => /*#__PURE__*/_reactDefault.default.createElement("span", {
    className: "Tag",
    style: computeStyle(props)
  }, children);
  _c = Tag;
  exports.default = Tag;
  var _c;
  $RefreshReg$(_c, "Tag");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
